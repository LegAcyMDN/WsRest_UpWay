// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WsRest_UpWay.Models.EntityFramework;

#nullable disable

namespace WsRest_UpWay.Migrations
{
    [DbContext(typeof(S215UpWayContext))]
    partial class S215UpWayContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AccessoireVelo", b =>
                {
                    b.Property<int>("AccessoireId")
                        .HasColumnType("integer");

                    b.Property<int>("VeloId")
                        .HasColumnType("integer");

                    b.HasKey("AccessoireId", "VeloId");

                    b.ToTable("AccessoireVelo");
                });

            modelBuilder.Entity("Appartient", b =>
                {
                    b.Property<int>("CategorieArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("caa_id");

                    b.Property<int>("SousCategorieArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("sca_id");

                    b.HasKey("CategorieArticleId", "SousCategorieArticleId")
                        .HasName("pk_appartient");

                    b.HasIndex("SousCategorieArticleId");

                    b.ToTable("appartient", "upways");
                });

            modelBuilder.Entity("Caracteriser", b =>
                {
                    b.Property<int>("CaracteristiqueId")
                        .HasColumnType("integer")
                        .HasColumnName("car_id");

                    b.Property<int>("VeloId")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.HasKey("CaracteristiqueId", "VeloId")
                        .HasName("pk_caracteriser");

                    b.HasIndex(new[] { "VeloId" }, "id_t_j_caracteriser_car_idvelo");

                    b.HasIndex(new[] { "CaracteristiqueId" }, "ix_t_j_caracteriser_car_idcaracteristique");

                    b.ToTable("t_j_caracteriser_car", "upways");
                });

            modelBuilder.Entity("CaracteristiqueCaracteristique", b =>
                {
                    b.Property<int>("CaracteristiqueId")
                        .HasColumnType("integer");

                    b.Property<int>("ListeCaracteristiquesCaracteristiqueId")
                        .HasColumnType("integer");

                    b.HasKey("CaracteristiqueId", "ListeCaracteristiquesCaracteristiqueId");

                    b.ToTable("CaracteristiqueCaracteristique");
                });

            modelBuilder.Entity("CaracteristiqueCategorie", b =>
                {
                    b.Property<int>("CaracteristiqueId")
                        .HasColumnType("integer");

                    b.Property<int>("CategorieId")
                        .HasColumnType("integer");

                    b.HasKey("CaracteristiqueId", "CategorieId");

                    b.ToTable("CaracteristiqueCategorie");
                });

            modelBuilder.Entity("CaracteristiqueVelo", b =>
                {
                    b.Property<int>("CaracteristiqueId")
                        .HasColumnType("integer");

                    b.Property<int>("VeloId")
                        .HasColumnType("integer");

                    b.HasKey("CaracteristiqueId", "VeloId");

                    b.ToTable("CaracteristiqueVelo");
                });

            modelBuilder.Entity("CategorieArticleCategorieArticle", b =>
                {
                    b.Property<int>("CategorieArticleId")
                        .HasColumnType("integer");

                    b.Property<int>("ListeCategorieArticlesCategorieArticleId")
                        .HasColumnType("integer");

                    b.HasKey("CategorieArticleId", "ListeCategorieArticlesCategorieArticleId");

                    b.ToTable("CategorieArticleCategorieArticle");
                });

            modelBuilder.Entity("Equiper", b =>
                {
                    b.Property<int>("AccessoireId")
                        .HasColumnType("integer")
                        .HasColumnName("acs_id");

                    b.Property<int>("VeloId")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.HasKey("AccessoireId", "VeloId")
                        .HasName("pk_equiper");

                    b.HasIndex(new[] { "AccessoireId" }, "ix_t_j__equiper_equ_acessoireid");

                    b.HasIndex(new[] { "VeloId" }, "ix_t_j_equiper_equ_veloid");

                    b.ToTable("t_j_equiper_equ", "upways");
                });

            modelBuilder.Entity("Estdisponible", b =>
                {
                    b.Property<int>("MagasinId")
                        .HasColumnType("integer")
                        .HasColumnName("mag_id");

                    b.Property<int>("VeloId")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.HasKey("MagasinId", "VeloId")
                        .HasName("pk_estdisponible");

                    b.HasIndex("VeloId");

                    b.HasIndex(new[] { "MagasinId" }, "ix_t_j_estdisponible_esd_magasinid");

                    b.ToTable("t_j_estdisponible_esd", "upways");
                });

            modelBuilder.Entity("MagasinVelo", b =>
                {
                    b.Property<int>("MagasinId")
                        .HasColumnType("integer");

                    b.Property<int>("VeloId")
                        .HasColumnType("integer");

                    b.HasKey("MagasinId", "VeloId");

                    b.ToTable("MagasinVelo");
                });

            modelBuilder.Entity("Regrouper", b =>
                {
                    b.Property<int>("CaracteristiqueId")
                        .HasColumnType("integer")
                        .HasColumnName("car_id");

                    b.Property<int>("CategorieId")
                        .HasColumnType("integer")
                        .HasColumnName("cat_id");

                    b.HasKey("CaracteristiqueId", "CategorieId")
                        .HasName("pk_regrouper");

                    b.HasIndex(new[] { "CaracteristiqueId" }, "ix_t_j_regrouper_reg_caracteristiqueid");

                    b.HasIndex(new[] { "CategorieId" }, "ix_t_j_regrouper_reg_categorieid");

                    b.ToTable("t_j_regrouper_reg", "upways");
                });

            modelBuilder.Entity("Sedecompose", b =>
                {
                    b.Property<int>("CaracteristiqueId")
                        .HasColumnType("integer")
                        .HasColumnName("car_id");

                    b.Property<int>("SousCaracteristiqueId")
                        .HasColumnType("integer")
                        .HasColumnName("soc_id");

                    b.HasKey("CaracteristiqueId", "SousCaracteristiqueId")
                        .HasName("pk_sedecompose");

                    b.HasIndex(new[] { "CaracteristiqueId" }, "idx_t_j_sedecompose_sed_caracteristiqueid");

                    b.HasIndex(new[] { "CaracteristiqueId" }, "ix_t_j_sedecompose_sed_caracteristiqueid");

                    b.HasIndex(new[] { "SousCaracteristiqueId" }, "ix_t_j_sedecompose_sed_souscaracteristiqueid");

                    b.ToTable("t_j_sedecompose_sed", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Accessoire", b =>
                {
                    b.Property<int>("AccessoireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("acs_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AccessoireId"));

                    b.Property<int>("CategorieId")
                        .HasColumnType("integer")
                        .HasColumnName("cat_id");

                    b.Property<string>("DescriptionAccessoire")
                        .HasMaxLength(4096)
                        .HasColumnType("text")
                        .HasColumnName("acs_description");

                    b.Property<int>("MarqueId")
                        .HasColumnType("integer")
                        .HasColumnName("mar_id");

                    b.Property<string>("NomAccessoire")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("acs_nom");

                    b.Property<decimal?>("PrixAccessoire")
                        .HasPrecision(8, 2)
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("acs_prix");

                    b.HasKey("AccessoireId")
                        .HasName("pk_accessoire");

                    b.HasIndex(new[] { "CategorieId" }, "ix_t_e_accessoire_acs_categorieid");

                    b.HasIndex(new[] { "MarqueId" }, "ix_t_e_accessoire_acs_marqueid");

                    b.ToTable("t_e_accessoire_acs", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.AdresseExpedition", b =>
                {
                    b.Property<int>("AdresseExpeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ade_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AdresseExpeId"));

                    b.Property<int?>("AdresseFactId")
                        .HasColumnType("integer")
                        .HasColumnName("adf_id");

                    b.Property<string>("BatimentExpeditionOpt")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ade_batopt");

                    b.Property<string>("CPExpedition")
                        .HasMaxLength(5)
                        .HasColumnType("char(5)")
                        .HasColumnName("ade_cp");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("cli_id");

                    b.Property<bool?>("DonneesSauvegardees")
                        .HasColumnType("boolean")
                        .HasColumnName("ade_donneessauv");

                    b.Property<string>("PaysExpedition")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ade_pays");

                    b.Property<string>("RegionExpedition")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("ade_region")
                        .IsFixedLength();

                    b.Property<string>("RueExpedition")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("ade_rue");

                    b.Property<string>("TelephoneExpedition")
                        .HasMaxLength(14)
                        .HasColumnType("char(14)")
                        .HasColumnName("ade_telephone");

                    b.Property<string>("VilleExpedition")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ade_ville");

                    b.HasKey("AdresseExpeId")
                        .HasName("pk_adresseexpedition");

                    b.HasIndex(new[] { "AdresseFactId" }, "ix_t_e_adresseexpedition_ade_adressefactid");

                    b.HasIndex(new[] { "ClientId" }, "ix_t_e_adresseexpedition_ade_clientid");

                    b.ToTable("t_e_adresseexpedition_ade", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.AdresseFacturation", b =>
                {
                    b.Property<int>("AdresseFactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("adf_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AdresseFactId"));

                    b.Property<int?>("AdresseExpId")
                        .HasColumnType("integer")
                        .HasColumnName("ade_id");

                    b.Property<string>("BatimentFacturationOpt")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adf_batopt");

                    b.Property<string>("CPFacturation")
                        .HasMaxLength(5)
                        .HasColumnType("char(5)")
                        .HasColumnName("adf_cp");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("cli_id");

                    b.Property<string>("PaysFacturation")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("adf_pays");

                    b.Property<string>("RegionFacturation")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("adf_region")
                        .IsFixedLength();

                    b.Property<string>("RueFacturation")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("adf_rue");

                    b.Property<string>("TelephoneFacturation")
                        .HasMaxLength(14)
                        .HasColumnType("char(14)")
                        .HasColumnName("adf_telephone");

                    b.Property<string>("VilleFacturation")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adf_ville");

                    b.HasKey("AdresseFactId")
                        .HasName("pk_adressefacturation");

                    b.HasIndex(new[] { "AdresseExpId" }, "ix_t_e_adressefacturation_adf_adresseexpeid");

                    b.HasIndex(new[] { "ClientId" }, "ix_t_e_adressefacturation_adf_clientid");

                    b.ToTable("t_e_adressefacturation_adf", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.AjouterAccessoire", b =>
                {
                    b.Property<int>("AccessoireId")
                        .HasColumnType("integer")
                        .HasColumnName("acs_id");

                    b.Property<int>("PanierId")
                        .HasColumnType("integer")
                        .HasColumnName("pan_id");

                    b.Property<int?>("QuantiteAccessoire")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(2)
                        .HasColumnType("integer")
                        .HasColumnName("aja_quantite")
                        .HasDefaultValueSql("1");

                    b.HasKey("AccessoireId", "PanierId")
                        .HasName("pk_ajouteraccessoire");

                    b.HasIndex(new[] { "AccessoireId" }, "ix_t_e_ajouteracessoire_aja_accessoireid");

                    b.HasIndex(new[] { "PanierId" }, "ix_t_e_ajouteracessoire_aja_panierid");

                    b.ToTable("t_j_ajouteraccessoire_aja", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.AlerteVelo", b =>
                {
                    b.Property<int>("AlerteId")
                        .HasColumnType("integer")
                        .HasColumnName("alv_id");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("cli_id");

                    b.Property<int>("VeloId")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.Property<DateTime?>("ModificationAlerte")
                        .HasColumnType("date")
                        .HasColumnName("alv_modification");

                    b.HasKey("AlerteId", "ClientId", "VeloId")
                        .HasName("pk_alertevelo");

                    b.HasIndex(new[] { "ClientId" }, "ix_t_e_alertevelo_alv_clientid");

                    b.HasIndex(new[] { "VeloId" }, "ix_t_e_alertevelo_alv_veloid");

                    b.ToTable("t_e_alertevelo_alv", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ArticleId"));

                    b.Property<int>("CategorieArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("caa_id");

                    b.HasKey("ArticleId")
                        .HasName("pk_article");

                    b.HasIndex("CategorieArticleId");

                    b.ToTable("t_e_article_art", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Assurance", b =>
                {
                    b.Property<int>("AssuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ass_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AssuranceId"));

                    b.Property<string>("DescriptionAssurance")
                        .HasMaxLength(4096)
                        .HasColumnType("text")
                        .HasColumnName("ass_description");

                    b.Property<decimal?>("PrixAssurance")
                        .HasColumnType("numeric(4, 2)")
                        .HasColumnName("ass_prix");

                    b.Property<string>("TitreAssurance")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ass_titre");

                    b.HasKey("AssuranceId")
                        .HasName("pk_assurance");

                    b.ToTable("t_e_assurance_ass", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Caracteristique", b =>
                {
                    b.Property<int>("CaracteristiqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("car_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CaracteristiqueId"));

                    b.Property<string>("ImageCaracteristique")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("car_image");

                    b.Property<string>("LibelleCaracteristique")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("car_libelle");

                    b.HasKey("CaracteristiqueId")
                        .HasName("pk_caracteristique");

                    b.ToTable("t_e_caracteristique_car", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.CaracteristiqueVelo", b =>
                {
                    b.Property<int>("CaracteristiqueVeloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cav_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CaracteristiqueVeloId"));

                    b.Property<string>("Amortisseur")
                        .HasMaxLength(50)
                        .HasColumnType("character(50)")
                        .HasColumnName("cav_amortisseur")
                        .IsFixedLength();

                    b.Property<string>("Couleur")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("cav_couleur")
                        .IsFixedLength();

                    b.Property<int?>("Debattement")
                        .HasColumnType("integer")
                        .HasColumnName("cav_debattement");

                    b.Property<int?>("DebattementAmortisseur")
                        .HasColumnType("integer")
                        .HasColumnName("cav_debattementamortisseur");

                    b.Property<string>("EtatBatterie")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("cav_etatbatterie")
                        .IsFixedLength();

                    b.Property<string>("Fourche")
                        .HasMaxLength(50)
                        .HasColumnType("character(50)")
                        .HasColumnName("cav_fourche")
                        .IsFixedLength();

                    b.Property<string>("Freins")
                        .HasMaxLength(30)
                        .HasColumnType("character(30)")
                        .HasColumnName("cav_freins")
                        .IsFixedLength();

                    b.Property<string>("Materiau")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("cav_materiau")
                        .IsFixedLength();

                    b.Property<string>("ModelTransmission")
                        .HasMaxLength(50)
                        .HasColumnType("character(50)")
                        .HasColumnName("cav_modeltransmission")
                        .IsFixedLength();

                    b.Property<int?>("NombreCycle")
                        .HasColumnType("integer")
                        .HasColumnName("cav_nombrecycle");

                    b.Property<int?>("NombreVitesse")
                        .HasColumnType("integer")
                        .HasColumnName("cav_nombrevitesse");

                    b.Property<string>("Pneus")
                        .HasMaxLength(100)
                        .HasColumnType("character(100)")
                        .HasColumnName("cav_pneus")
                        .IsFixedLength();

                    b.Property<decimal>("Poids")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("cav_poids");

                    b.Property<bool?>("SelleTelescopique")
                        .HasColumnType("boolean")
                        .HasColumnName("cav_selletelescopique");

                    b.Property<int?>("TaillesRoues")
                        .HasColumnType("integer")
                        .HasColumnName("cav_taillesroues");

                    b.Property<int>("TubeSelle")
                        .HasColumnType("integer")
                        .HasColumnName("cav_tubeselle");

                    b.Property<string>("TypeCargo")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("cav_typecargo")
                        .IsFixedLength();

                    b.Property<string>("TypeSuspension")
                        .HasMaxLength(20)
                        .HasColumnType("character(20)")
                        .HasColumnName("cav_typesuspension")
                        .IsFixedLength();

                    b.HasKey("CaracteristiqueVeloId")
                        .HasName("pk_caracteristiquevelo");

                    b.ToTable("t_e_caracteristiquevelo_cav", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Categorie", b =>
                {
                    b.Property<int>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cat_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategorieId"));

                    b.Property<string>("LibelleCategorie")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cat_libelle");

                    b.HasKey("CategorieId")
                        .HasName("pk_categorie");

                    b.HasIndex(new[] { "LibelleCategorie" }, "ix_t_e_categorie_cat_libellecategorie");

                    b.ToTable("t_e_categorie_cat", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.CategorieArticle", b =>
                {
                    b.Property<int>("CategorieArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("caa_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategorieArticleId"));

                    b.Property<string>("ContenuCategorieArticle")
                        .HasMaxLength(4096)
                        .HasColumnType("text")
                        .HasColumnName("caa_contenue");

                    b.Property<string>("ImageCategorie")
                        .HasMaxLength(4096)
                        .HasColumnType("text")
                        .HasColumnName("caa_image");

                    b.Property<string>("TitreCategorieArticle")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("caa_titre");

                    b.HasKey("CategorieArticleId")
                        .HasName("pk_categorie_article");

                    b.ToTable("t_e_categorie_article_caa", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.CodeReduction", b =>
                {
                    b.Property<string>("ReductionId")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("cor_id");

                    b.Property<bool?>("ActifReduction")
                        .HasColumnType("boolean")
                        .HasColumnName("cor_actifreduction");

                    b.Property<int?>("Reduction")
                        .HasColumnType("integer")
                        .HasColumnName("cor_reduction");

                    b.HasKey("ReductionId")
                        .HasName("pk_codereduction");

                    b.ToTable("t_e_codereduction_cor", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.CompteClient", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("coc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientId"));

                    b.Property<DateOnly?>("DateCreation")
                        .HasColumnType("date")
                        .HasColumnName("coc_datecreation");

                    b.Property<string>("EmailClient")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("coc_email");

                    b.Property<DateOnly?>("EmailVerifiedAt")
                        .HasColumnType("date")
                        .HasColumnName("coc_email_verified_at");

                    b.Property<bool?>("IsFromGoogle")
                        .HasColumnType("boolean")
                        .HasColumnName("coc_is_from_google");

                    b.Property<string>("LoginClient")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("coc_login");

                    b.Property<string>("MotDePasseClient")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("coc_mpd");

                    b.Property<string>("NomClient")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("coc_nom");

                    b.Property<string>("PrenomClient")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("coc_prenom");

                    b.Property<string>("RememberToken")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("coc_remember_token");

                    b.Property<DateTime?>("TwoFactorConfirmedAt")
                        .HasColumnType("date")
                        .HasColumnName("coc_two_factor_confirmed_at");

                    b.Property<string>("TwoFactorRecoveryCodes")
                        .HasMaxLength(4096)
                        .HasColumnType("text")
                        .HasColumnName("coc_two_factor_recovery_codes");

                    b.Property<string>("TwoFactorSecret")
                        .HasMaxLength(4096)
                        .HasColumnType("text")
                        .HasColumnName("coc_two_factor_secret");

                    b.Property<string>("Usertype")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("coc_usertype");

                    b.HasKey("ClientId")
                        .HasName("pk_compteclient");

                    b.HasIndex(new[] { "EmailClient" }, "ix_t_e_compteclient_coc_email_unq")
                        .IsUnique();

                    b.HasIndex(new[] { "LoginClient" }, "ix_t_e_compteclient_coc_pseudo_unq")
                        .IsUnique();

                    b.ToTable("t_e_compteclient_coc", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.ContenuArticle", b =>
                {
                    b.Property<int>("ContenueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("coa_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContenueId"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    b.Property<string>("Contenu")
                        .HasMaxLength(4096)
                        .HasColumnType("text")
                        .HasColumnName("coa_contenu");

                    b.Property<int?>("PrioriteContenu")
                        .HasColumnType("integer")
                        .HasColumnName("coa_prioritecontenu");

                    b.Property<string>("TypeContenu")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("coa_typecontenu");

                    b.HasKey("ContenueId")
                        .HasName("pk_contenu_article");

                    b.HasIndex("ArticleId");

                    b.ToTable("t_e_contenu_article_coa", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.DetailCommande", b =>
                {
                    b.Property<int>("CommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("detcom_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommandeId"));

                    b.Property<int?>("AdresseFactId")
                        .HasColumnType("integer")
                        .HasColumnName("adf_id");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("cli_id");

                    b.Property<DateTime?>("DateAchat")
                        .HasColumnType("date")
                        .HasColumnName("detcom_datach");

                    b.Property<int?>("EtatCommandeId")
                        .HasColumnType("integer")
                        .HasColumnName("etacom_id");

                    b.Property<string>("ModeExpedition")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("detcom_modexp");

                    b.Property<string>("MoyenPaiement")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("detcom_moypai");

                    b.Property<int?>("PanierId")
                        .HasColumnType("integer")
                        .HasColumnName("pan_id");

                    b.Property<int?>("RetraitMagasinId")
                        .HasColumnType("integer")
                        .HasColumnName("retmag_id");

                    b.HasKey("CommandeId")
                        .HasName("pk_detailcommande");

                    b.HasIndex(new[] { "AdresseFactId" }, "ix_t_e_detailcommande_detcom_adressefactid");

                    b.HasIndex(new[] { "ClientId" }, "ix_t_e_detailcommande_detcom_clientid");

                    b.HasIndex(new[] { "EtatCommandeId" }, "ix_t_e_detailcommande_detcom_etatcommandeid");

                    b.HasIndex(new[] { "PanierId" }, "ix_t_e_detailcommande_detcom_panierid");

                    b.HasIndex(new[] { "RetraitMagasinId" }, "ix_t_e_detailcommande_detcom_retraitmagasinid");

                    b.ToTable("t_e_detailcommande_detcom", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Dpo", b =>
                {
                    b.Property<int>("DpoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dpo_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DpoId"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    b.Property<DateTime?>("DateRequeteDpo")
                        .HasColumnType("char")
                        .HasColumnName("dpo_datreqdpo");

                    b.Property<string>("TypeOperation")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("dpo_typope");

                    b.HasKey("DpoId")
                        .HasName("pk_dpo");

                    b.HasIndex(new[] { "ClientId" }, "ix_t_e_dpo_dpo_clientid");

                    b.ToTable("t_e_dpo_dpo", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.EstRealise", b =>
                {
                    b.Property<int>("VeloId")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.Property<int>("InspectionId")
                        .HasColumnType("integer")
                        .HasColumnName("ras_id");

                    b.Property<int>("ReparationId")
                        .HasColumnType("integer")
                        .HasColumnName("esr_id");

                    b.Property<string>("CommentaireInspection")
                        .HasMaxLength(4096)
                        .HasColumnType("text")
                        .HasColumnName("esr_commentaireinspection");

                    b.Property<string>("DateInspection")
                        .HasColumnType("text")
                        .HasColumnName("esr_dateinspection")
                        .IsFixedLength();

                    b.Property<string>("HistoriqueInspection")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("esr_historiqueinspection");

                    b.HasKey("VeloId", "InspectionId", "ReparationId")
                        .HasName("pk_estrealise");

                    b.HasIndex(new[] { "InspectionId" }, "ix_t_j_estrealise_esr_inspectionid");

                    b.HasIndex(new[] { "ReparationId" }, "ix_t_j_estrealise_esr_reparationid");

                    b.HasIndex(new[] { "VeloId" }, "ix_t_j_estrealise_esr_veloid");

                    b.ToTable("t_j_estrealise_esr", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.EtatCommande", b =>
                {
                    b.Property<int>("EtatCommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("etc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EtatCommandeId"));

                    b.Property<string>("LibelleEtat")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("etc_libelle");

                    b.HasKey("EtatCommandeId")
                        .HasName("pk_etatcommande");

                    b.ToTable("t_e_etatcommande_etc", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Information", b =>
                {
                    b.Property<int>("InformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("inf_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InformationId"));

                    b.Property<int>("AdresseExpeId")
                        .HasColumnType("integer")
                        .HasColumnName("adexp_id");

                    b.Property<string>("ContactInformations")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("inf_continf");

                    b.Property<string>("InformationPays")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("inf_payinf");

                    b.Property<string>("InformationRue")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("inf_rueinf");

                    b.Property<string>("ModeLivraison")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("inf_moodliv");

                    b.Property<bool?>("OffreEmail")
                        .HasColumnType("boolean")
                        .HasColumnName("inf_offmail");

                    b.Property<int>("PanierId")
                        .HasColumnType("integer")
                        .HasColumnName("pan_id");

                    b.Property<string>("ReductionId")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("red_id");

                    b.Property<int?>("RetraitMagasinId")
                        .HasColumnType("integer")
                        .HasColumnName("retmag_id");

                    b.HasKey("InformationId")
                        .HasName("pk_informations");

                    b.HasIndex(new[] { "AdresseExpeId" }, "ix_t_e_informations_inf_adresseexpeid");

                    b.HasIndex(new[] { "PanierId" }, "ix_t_e_informations_inf_panierid");

                    b.HasIndex(new[] { "ReductionId" }, "ix_t_e_informations_inf_reductionid");

                    b.HasIndex(new[] { "RetraitMagasinId" }, "ix_t_e_informations_inf_retraitmagasinid");

                    b.ToTable("t_e_informations_inf", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.LignePanier", b =>
                {
                    b.Property<int>("PanierId")
                        .HasColumnType("integer")
                        .HasColumnName("lignpan_id");

                    b.Property<int>("VeloId")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.Property<int>("AssuranceId")
                        .HasColumnType("integer")
                        .HasColumnName("ass_id");

                    b.Property<decimal>("PrixQuantite")
                        .HasPrecision(11, 2)
                        .HasColumnType("numeric(11,2)")
                        .HasColumnName("lignpan_priquant");

                    b.Property<decimal>("QuantitePanier")
                        .HasPrecision(2)
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("lignpan_quantpan");

                    b.HasKey("PanierId", "VeloId")
                        .HasName("pk_lignepanier");

                    b.HasIndex(new[] { "AssuranceId" }, "ix_t_e_linepanier_lignpan_assuranceid");

                    b.HasIndex(new[] { "PanierId" }, "ix_t_e_linepanier_lignpan_panierid");

                    b.HasIndex(new[] { "VeloId" }, "ix_t_e_linepanier_lignpan_veloid");

                    b.ToTable("t_e_lignepanier_lignpan", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Magasin", b =>
                {
                    b.Property<int>("MagasinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mag_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MagasinId"));

                    b.Property<string>("CPMagasin")
                        .HasMaxLength(5)
                        .HasColumnType("char(5)")
                        .HasColumnName("mag_cp")
                        .IsFixedLength();

                    b.Property<string>("HoraireMagasin")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("mag_horaire");

                    b.Property<string>("NomMagasin")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("mag_nom");

                    b.Property<string>("RueMagasin")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("mag_rue");

                    b.Property<string>("VilleMagasin")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("mag_ville");

                    b.HasKey("MagasinId")
                        .HasName("pk_magasin");

                    b.ToTable("t_e_magasin_mag", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.MarquageVelo", b =>
                {
                    b.Property<string>("CodeMarquage")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("mal_code");

                    b.Property<int>("PanierId")
                        .HasColumnType("integer")
                        .HasColumnName("pan_id");

                    b.Property<decimal?>("PrixMarquage")
                        .HasPrecision(2, 2)
                        .HasColumnType("numeric(2, 2)")
                        .HasColumnName("mal_prix");

                    b.Property<int>("VeloId")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.HasKey("CodeMarquage")
                        .HasName("pk_marquagevelo");

                    b.HasIndex("VeloId", "PanierId");

                    b.HasIndex(new[] { "CodeMarquage" }, "codemarquage_unq")
                        .IsUnique();

                    b.HasIndex(new[] { "PanierId", "VeloId" }, "ix_t_e_marquagevelo_idpanier_idvelo");

                    b.ToTable("t_e_marquage_velo_mal", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Marque", b =>
                {
                    b.Property<int>("MarqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mar_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MarqueId"));

                    b.Property<string>("NomMarque")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("mar_nom");

                    b.HasKey("MarqueId")
                        .HasName("pk_marque");

                    b.HasIndex(new[] { "NomMarque" }, "nommarque_unq")
                        .IsUnique();

                    b.ToTable("t_e_marque_mar", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.MentionVelo", b =>
                {
                    b.Property<int>("MentionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mev_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MentionId"));

                    b.Property<string>("LibelleMention")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("mev_libelle");

                    b.Property<string>("ValeurMention")
                        .HasMaxLength(4096)
                        .HasColumnType("text")
                        .HasColumnName("mev_valeur");

                    b.Property<int>("VeloId")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.HasKey("MentionId")
                        .HasName("pk_mentionvelo");

                    b.HasIndex(new[] { "VeloId" }, "ix_t_e_mentionvelo_mev_veloid");

                    b.ToTable("t_e_mentionvelo_mev", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Moteur", b =>
                {
                    b.Property<int>("MoteurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mot_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MoteurId"));

                    b.Property<string>("CoupleMoteur")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("mot_couple");

                    b.Property<int>("MarqueId")
                        .HasColumnType("integer")
                        .HasColumnName("mar_id");

                    b.Property<string>("ModeleMoteur")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("mot_modele");

                    b.Property<string>("VitesseMaximal")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("mot_vitessemax");

                    b.HasKey("MoteurId")
                        .HasName("pk_moteur");

                    b.HasIndex(new[] { "MarqueId" }, "ix_t_e_moteur_mot_marqueid");

                    b.ToTable("t_e_moteur_mot", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Panier", b =>
                {
                    b.Property<int>("PanierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pan_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PanierId"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("cli_id");

                    b.Property<int?>("CommandeId")
                        .HasColumnType("integer")
                        .HasColumnName("com_id");

                    b.Property<string>("Cookie")
                        .HasMaxLength(255)
                        .HasColumnType("text")
                        .HasColumnName("pan_cookie");

                    b.Property<decimal?>("PrixPanier")
                        .HasPrecision(11, 2)
                        .HasColumnType("numeric(11,2)")
                        .HasColumnName("pan_prix");

                    b.HasKey("PanierId")
                        .HasName("pk_panier");

                    b.HasIndex("ClientId");

                    b.HasIndex(new[] { "CommandeId" }, "ix_t_e_panier_pan_commandeid");

                    b.ToTable("t_e_panier_pan", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.PhotoAccessoire", b =>
                {
                    b.Property<int>("PhotoAcessoireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pha_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PhotoAcessoireId"));

                    b.Property<int>("AccessoireId")
                        .HasColumnType("integer")
                        .HasColumnName("acs_id");

                    b.Property<string>("UrlPhotoAccessoire")
                        .HasMaxLength(4096)
                        .HasColumnType("text")
                        .HasColumnName("pha_url");

                    b.HasKey("PhotoAcessoireId")
                        .HasName("pk_photoaccessoire");

                    b.HasIndex(new[] { "AccessoireId" }, "ix_t_e_photoaccessoire_pha_accessoireid");

                    b.ToTable("t_e_photoaccessoire_pha", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.PhotoVelo", b =>
                {
                    b.Property<int>("PhotoVeloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("phv_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PhotoVeloId"));

                    b.Property<byte[]>("PhotoBytea")
                        .HasColumnType("bytea")
                        .HasColumnName("phv_bytea");

                    b.Property<string>("UrlPhotoVelo")
                        .HasMaxLength(4096)
                        .HasColumnType("text")
                        .HasColumnName("phv_url");

                    b.Property<int>("VeloId")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.HasKey("PhotoVeloId")
                        .HasName("pk_photovelo");

                    b.HasIndex(new[] { "VeloId" }, "ix_t_e_photovelo_phv_veloid");

                    b.ToTable("t_e_photovelo_phv", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.RapportInspection", b =>
                {
                    b.Property<int>("InspectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ras_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InspectionId"));

                    b.Property<string>("PointDInspection")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("ras_pointdinspection");

                    b.Property<string>("SousTypeInspection")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("ras_soustype");

                    b.Property<string>("TypeInspection")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("ras_type");

                    b.HasKey("InspectionId")
                        .HasName("pk_rapportinspection");

                    b.ToTable("t_e_rapportinspection_ras", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.ReparationVelo", b =>
                {
                    b.Property<int>("ReparationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rev_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReparationId"));

                    b.Property<bool?>("CheckReparation")
                        .HasColumnType("boolean")
                        .HasColumnName("rev_check");

                    b.Property<bool?>("CheckValidation")
                        .HasColumnType("boolean")
                        .HasColumnName("rev_checkvalidation");

                    b.HasKey("ReparationId")
                        .HasName("pk_reparationvelo");

                    b.ToTable("t_e_reparationvelo_rev", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.RetraitMagasin", b =>
                {
                    b.Property<int>("RetraitMagasinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rem_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RetraitMagasinId"));

                    b.Property<int?>("CommandeId")
                        .HasColumnType("integer")
                        .HasColumnName("detcom_id");

                    b.Property<DateOnly?>("DateRetrait")
                        .HasColumnType("date")
                        .HasColumnName("rem_date");

                    b.Property<TimeOnly?>("HeureRetrait")
                        .HasColumnType("time")
                        .HasColumnName("rem_heure");

                    b.Property<int?>("InformationId")
                        .HasColumnType("integer")
                        .HasColumnName("inf_id");

                    b.Property<int>("MagasinId")
                        .HasColumnType("integer")
                        .HasColumnName("mag_id");

                    b.HasKey("RetraitMagasinId")
                        .HasName("pk_retraitmagasin");

                    b.HasIndex(new[] { "CommandeId" }, "ix_t_e_retraitmagasin_rem_commandeid");

                    b.HasIndex(new[] { "InformationId" }, "ix_t_e_retraitmagasin_rem_informationid");

                    b.HasIndex(new[] { "MagasinId" }, "ix_t_e_retraitmagasin_rem_magasinid");

                    b.ToTable("t_e_retraitmagasin_rem", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.TestVelo", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tev_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TestId"));

                    b.Property<DateTime?>("DateTest")
                        .HasColumnType("date")
                        .HasColumnName("tev_date");

                    b.Property<TimeOnly?>("HeureTest")
                        .HasColumnType("time")
                        .HasColumnName("tev_heure");

                    b.Property<int>("MagasinId")
                        .HasColumnType("integer")
                        .HasColumnName("mag_id");

                    b.Property<int>("VeloId")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.HasKey("TestId")
                        .HasName("pk_testvelo");

                    b.HasIndex(new[] { "MagasinId" }, "ix_t_e_testvelo_tev_idmagasin");

                    b.HasIndex(new[] { "VeloId" }, "ix_t_e_testvelo_tev_idvelo");

                    b.ToTable("t_e_testvelo_tev", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Utilite", b =>
                {
                    b.Property<int>("UtiliteId")
                        .HasColumnType("integer")
                        .HasColumnName("uti_id");

                    b.Property<int>("VeloId")
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    b.Property<decimal?>("ValeurUtilite")
                        .HasPrecision(5)
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("uti_valeur");

                    b.HasKey("UtiliteId", "VeloId")
                        .HasName("pk_utilite");

                    b.HasIndex(new[] { "VeloId" }, "ix_t_e_utilite_uti_veloid");

                    b.ToTable("t_j_utilite_uti", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Velo", b =>
                {
                    b.Property<int>("VeloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vel_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VeloId"));

                    b.Property<int?>("AnneeVelo")
                        .HasPrecision(4)
                        .HasColumnType("integer")
                        .HasColumnName("vel_annee");

                    b.Property<string>("CapaciteBatterie")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("vel_capacitebatterie")
                        .IsFixedLength();

                    b.Property<int?>("CaracteristiqueVeloId")
                        .HasColumnType("integer")
                        .HasColumnName("car_id");

                    b.Property<int>("CategorieId")
                        .HasColumnType("integer")
                        .HasColumnName("cat_id");

                    b.Property<string>("DescriptifVelo")
                        .HasMaxLength(5000)
                        .HasColumnType("text")
                        .HasColumnName("vel_descriptif");

                    b.Property<int?>("MarqueId")
                        .HasColumnType("integer")
                        .HasColumnName("mar_id");

                    b.Property<int?>("MoteurId")
                        .HasColumnType("integer")
                        .HasColumnName("mot_id");

                    b.Property<string>("NomVelo")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("vel_nom");

                    b.Property<string>("NombreKms")
                        .HasMaxLength(15)
                        .HasColumnType("character(15)")
                        .HasColumnName("vel_kms")
                        .IsFixedLength();

                    b.Property<string>("PositionMoteur")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("vel_positionmoteur");

                    b.Property<decimal?>("PourcentageReduction")
                        .HasPrecision(3)
                        .HasColumnType("numeric(3,0)")
                        .HasColumnName("vel_pourcentagereduction");

                    b.Property<decimal?>("PrixNeuf")
                        .HasPrecision(5)
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("vel_prixneuf");

                    b.Property<decimal?>("PrixRemise")
                        .HasPrecision(5)
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("vel_prixremise");

                    b.Property<int?>("QuantiteVelo")
                        .HasPrecision(3)
                        .HasColumnType("integer")
                        .HasColumnName("vel_quantite");

                    b.Property<string>("TailleMax")
                        .HasMaxLength(15)
                        .HasColumnType("character(15)")
                        .HasColumnName("vel_taillemax")
                        .IsFixedLength();

                    b.Property<string>("TailleMin")
                        .HasMaxLength(15)
                        .HasColumnType("character(15)")
                        .HasColumnName("vel_taillemin")
                        .IsFixedLength();

                    b.HasKey("VeloId")
                        .HasName("pk_velo");

                    b.HasIndex(new[] { "CaracteristiqueVeloId" }, "ix_t_e_velo_vel_caracteristiqueveloid");

                    b.HasIndex(new[] { "CategorieId" }, "ix_t_e_velo_vel_categorieid");

                    b.HasIndex(new[] { "MarqueId" }, "ix_t_e_velo_vel_marqueid");

                    b.HasIndex(new[] { "MoteurId" }, "ix_t_e_velo_vel_moteurid");

                    b.ToTable("t_e_velo_vel", "upways");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.VeloModifier", b =>
                {
                    b.Property<int>("VelomId")
                        .HasColumnType("integer")
                        .HasColumnName("vlm_id");

                    b.Property<decimal?>("AncienPrix")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5, 2)")
                        .HasColumnName("vlm_ancienprix");

                    b.Property<decimal?>("AnneeVelo")
                        .HasPrecision(4)
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("vlm_annee");

                    b.Property<string>("CapaciteBatterie")
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .HasColumnName("vlm_capacitebatterie")
                        .IsFixedLength();

                    b.Property<int?>("CaracteristiqueVeloId")
                        .HasColumnType("integer")
                        .HasColumnName("car_id");

                    b.Property<int>("CategorieId")
                        .HasColumnType("integer")
                        .HasColumnName("cat_id");

                    b.Property<string>("DescriptifVelo")
                        .HasMaxLength(4096)
                        .HasColumnType("text")
                        .HasColumnName("vlm_descriptif");

                    b.Property<int?>("MarqueId")
                        .HasColumnType("integer")
                        .HasColumnName("mar_id");

                    b.Property<DateTime?>("Modifier")
                        .HasColumnType("date")
                        .HasColumnName("modifier");

                    b.Property<int?>("MoteurId")
                        .HasColumnType("integer")
                        .HasColumnName("mot_id");

                    b.Property<string>("NomVelo")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("vlm_nom");

                    b.Property<string>("NombreKms")
                        .HasMaxLength(15)
                        .HasColumnType("character(15)")
                        .HasColumnName("vlm_kms")
                        .IsFixedLength();

                    b.Property<string>("PositionMoteur")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("vlm_positionmoteur");

                    b.Property<decimal?>("PourcentageReduction")
                        .HasPrecision(3)
                        .HasColumnType("numeric(3, 0)")
                        .HasColumnName("vlm_pourcentagereduction");

                    b.Property<decimal?>("PrixNeuf")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5, 2")
                        .HasColumnName("vlm_prixneuf");

                    b.Property<decimal?>("PrixRemise")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5, 2")
                        .HasColumnName("vlm_prixremise");

                    b.Property<decimal?>("QuantiteVelo")
                        .HasPrecision(3)
                        .HasColumnType("numeric(3,0)")
                        .HasColumnName("vlm_quantite");

                    b.Property<string>("TailleMax")
                        .HasMaxLength(15)
                        .HasColumnType("character(15)")
                        .HasColumnName("vlm_taillemax")
                        .IsFixedLength();

                    b.Property<string>("TailleMin")
                        .HasMaxLength(15)
                        .HasColumnType("character(15)")
                        .HasColumnName("vlm_taillemin")
                        .IsFixedLength();

                    b.Property<int>("VeloModifId")
                        .HasColumnType("integer")
                        .HasColumnName("vlm_idm");

                    b.HasKey("VelomId")
                        .HasName("pk_velomodif");

                    b.HasIndex(new[] { "CaracteristiqueVeloId" }, "ix_t_e_velomodifier_vlm_caracteristiqueveloid");

                    b.HasIndex(new[] { "CategorieId" }, "ix_t_e_velomodifier_vlm_categorieid");

                    b.HasIndex(new[] { "MarqueId" }, "ix_t_e_velomodifier_vlm_marqueid");

                    b.HasIndex(new[] { "MoteurId" }, "ix_t_e_velomodifier_vlm_moteurid");

                    b.ToTable("t_e_velomodofier_vlm", "upways");
                });

            modelBuilder.Entity("Appartient", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.CategorieArticle", null)
                        .WithMany()
                        .HasForeignKey("CategorieArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_appartient_categorie_fi");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.CategorieArticle", null)
                        .WithMany()
                        .HasForeignKey("SousCategorieArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_appartient_categorie");
                });

            modelBuilder.Entity("Caracteriser", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Caracteristique", null)
                        .WithMany()
                        .HasForeignKey("CaracteristiqueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_caracter_caracteri_caracter");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Velo", null)
                        .WithMany()
                        .HasForeignKey("VeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_caracter_caracteri_velo");
                });

            modelBuilder.Entity("Equiper", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Accessoire", null)
                        .WithMany()
                        .HasForeignKey("AccessoireId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_equiper_equiper_accessoi");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Velo", null)
                        .WithMany()
                        .HasForeignKey("VeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_equiper_equiper2_velo");
                });

            modelBuilder.Entity("Estdisponible", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Magasin", null)
                        .WithMany()
                        .HasForeignKey("MagasinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_estdispo_estdispon_magasin");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Velo", null)
                        .WithMany()
                        .HasForeignKey("VeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_estdispo_estdispon_velo");
                });

            modelBuilder.Entity("Regrouper", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Caracteristique", null)
                        .WithMany()
                        .HasForeignKey("CaracteristiqueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_regroupe_regrouper_caracter");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Categorie", null)
                        .WithMany()
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_regroupe_regrouper_categori");
                });

            modelBuilder.Entity("Sedecompose", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Caracteristique", null)
                        .WithMany()
                        .HasForeignKey("CaracteristiqueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sedecomp_caract_fi_caracter");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Caracteristique", null)
                        .WithMany()
                        .HasForeignKey("SousCaracteristiqueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sedecomp_caracteri_caracter");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Accessoire", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Categorie", "AccessoireCategorie")
                        .WithMany("ListeAccessoires")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_accessoi_classifie_categori");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Marque", "AccessoireMarque")
                        .WithMany("ListeAccessoires")
                        .HasForeignKey("MarqueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_accessoi_distribue_marque");

                    b.Navigation("AccessoireCategorie");

                    b.Navigation("AccessoireMarque");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.AdresseExpedition", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.AdresseFacturation", "AdresseExpeFact")
                        .WithMany("ListeAdresseExpe")
                        .HasForeignKey("AdresseFactId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_adressee_assimiler_adressef");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.CompteClient", "AdresseExpeClient")
                        .WithMany("ListeAdresseExpe")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_adressee_modifier_comptecl");

                    b.Navigation("AdresseExpeClient");

                    b.Navigation("AdresseExpeFact");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.AdresseFacturation", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.AdresseExpedition", "AdresseFactExpe")
                        .WithMany("ListeAdresseFact")
                        .HasForeignKey("AdresseExpId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_adressef_assimiler_adressee");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.CompteClient", "AdresseFactClient")
                        .WithMany("ListeAdresseFact")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_adressef_rectifier_comptecl");

                    b.Navigation("AdresseFactClient");

                    b.Navigation("AdresseFactExpe");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.AjouterAccessoire", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Accessoire", "AjoutDAccessoire")
                        .WithMany("ListeAjoutAccessoires")
                        .HasForeignKey("AccessoireId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ajoutera_ajouterac_accessoi");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Panier", "AjoutDAccessoirePanier")
                        .WithMany("ListeAjouterAccessoires")
                        .HasForeignKey("PanierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ajoutera_ajouterac_panier");

                    b.Navigation("AjoutDAccessoire");

                    b.Navigation("AjoutDAccessoirePanier");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.AlerteVelo", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.CompteClient", "AlerteClient")
                        .WithMany("ListeAlerteVelos")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_alertevelo_client");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Velo", "AlerteVeloVelo")
                        .WithMany("ListeAlerteVelos")
                        .HasForeignKey("VeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_alertevelo_velo");

                    b.Navigation("AlerteClient");

                    b.Navigation("AlerteVeloVelo");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Article", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.CategorieArticle", "ArticleCategorieArt")
                        .WithMany("ListeArticles")
                        .HasForeignKey("CategorieArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_article");

                    b.Navigation("ArticleCategorieArt");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.ContenuArticle", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Article", "ContenuArticleArt")
                        .WithMany("ListeContenuArticles")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_contenu_article_article");

                    b.Navigation("ContenuArticleArt");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.DetailCommande", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.AdresseFacturation", "DetailComAdresseFact")
                        .WithMany("ListeDetailCommande")
                        .HasForeignKey("AdresseFactId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_detailco_afficher2_adressef");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.CompteClient", "DetailCommandeClient")
                        .WithMany("ListeDetailCommandes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_detailco_visualise_comptecl");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.EtatCommande", "DetailCommandeEtat")
                        .WithMany("ListeDetailCommandes")
                        .HasForeignKey("EtatCommandeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_detailco_indiquer_etatcomm");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Panier", "DetailCommandePanier")
                        .WithMany("ListeDetailCommandes")
                        .HasForeignKey("PanierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_detailco_estlie_panier");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.RetraitMagasin", "DetailComRetraitMagasin")
                        .WithMany("ListeDetailCommandes")
                        .HasForeignKey("RetraitMagasinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_detailco_monter_retraitm");

                    b.Navigation("DetailComAdresseFact");

                    b.Navigation("DetailComRetraitMagasin");

                    b.Navigation("DetailCommandeClient");

                    b.Navigation("DetailCommandeEtat");

                    b.Navigation("DetailCommandePanier");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.EstRealise", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.RapportInspection", "EstRealiseRapportInspection")
                        .WithMany("ListeEstRealises")
                        .HasForeignKey("InspectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_estreali_estrealis_rapporti");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.ReparationVelo", "EstRealiseReparationVelo")
                        .WithMany("ListeEstRealises")
                        .HasForeignKey("ReparationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_estreali_estrealis_reparati");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Velo", "EstRealiseVelo")
                        .WithMany("ListeEstRealises")
                        .HasForeignKey("VeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_estreali_estrealis_velo");

                    b.Navigation("EstRealiseRapportInspection");

                    b.Navigation("EstRealiseReparationVelo");

                    b.Navigation("EstRealiseVelo");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Information", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.AdresseExpedition", "InformationAdresseExpe")
                        .WithMany("ListeInformations")
                        .HasForeignKey("AdresseExpeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_informat_opter_adressee");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Panier", "InformationPanier")
                        .WithMany("ListeInformations")
                        .HasForeignKey("PanierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_informat_regler_panier");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.CodeReduction", "InformationCodeReduction")
                        .WithMany("ListeInformations")
                        .HasForeignKey("ReductionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_informat_utiliser_coderedu");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.RetraitMagasin", "InformationRetraitMagasin")
                        .WithMany("ListeInformations")
                        .HasForeignKey("RetraitMagasinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_informat_choisir2_retraitm");

                    b.Navigation("InformationAdresseExpe");

                    b.Navigation("InformationCodeReduction");

                    b.Navigation("InformationPanier");

                    b.Navigation("InformationRetraitMagasin");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.LignePanier", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Assurance", "LignePanierAssurance")
                        .WithMany("ListeLignePaniers")
                        .HasForeignKey("AssuranceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lignepan_estpresen_assuranc");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Panier", "LignePanierPanier")
                        .WithMany("ListeLignePaniers")
                        .HasForeignKey("PanierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lignepan_contenir_panier");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Velo", "LignePanierVelo")
                        .WithMany("ListeLignePaniers")
                        .HasForeignKey("VeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lignepan_estvisibl_velo");

                    b.Navigation("LignePanierAssurance");

                    b.Navigation("LignePanierPanier");

                    b.Navigation("LignePanierVelo");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.MarquageVelo", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.LignePanier", "MarquageVeloLignePanier")
                        .WithMany("ListeMarquageVelos")
                        .HasForeignKey("VeloId", "PanierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_marquage_estobliga_lignepan");

                    b.Navigation("MarquageVeloLignePanier");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.MentionVelo", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Velo", "MentionVeloVelo")
                        .WithMany("ListeMentionVelos")
                        .HasForeignKey("VeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_mentionv_mentionne_velo");

                    b.Navigation("MentionVeloVelo");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Moteur", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Marque", "MoteurMarque")
                        .WithMany("ListeMoteurs")
                        .HasForeignKey("MarqueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_moteur_produire_marque");

                    b.Navigation("MoteurMarque");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Panier", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.CompteClient", "PanierClient")
                        .WithMany("ListePaniers")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_panier_appartient_client");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.DetailCommande", "PanierDetailCommande")
                        .WithMany("ListePaniers")
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_panier_estlie2_detailco");

                    b.Navigation("PanierClient");

                    b.Navigation("PanierDetailCommande");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.PhotoAccessoire", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Accessoire", "PhotoAccessoireAccessoire")
                        .WithMany("ListePhotoAccessoires")
                        .HasForeignKey("AccessoireId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_photoacc_comprendr_accessoi");

                    b.Navigation("PhotoAccessoireAccessoire");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.PhotoVelo", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Velo", "PhotoVeloVelo")
                        .WithMany("ListePhotoVelos")
                        .HasForeignKey("VeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_photovel_represent_velo");

                    b.Navigation("PhotoVeloVelo");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.RetraitMagasin", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.DetailCommande", "RetraitMagasinDetailCom")
                        .WithMany("ListeRetraitMagasins")
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_retraitm_monter2_detailco");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Information", "RetraitMagasinInformation")
                        .WithMany("ListeRetraitMagasins")
                        .HasForeignKey("InformationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_retraitm_choisir_informat");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Magasin", "RetraitMagasinMagasin")
                        .WithMany("ListeRetraitMagasins")
                        .HasForeignKey("MagasinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_retraitm_estfait_magasin");

                    b.Navigation("RetraitMagasinDetailCom");

                    b.Navigation("RetraitMagasinInformation");

                    b.Navigation("RetraitMagasinMagasin");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.TestVelo", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Magasin", "TestVeloMagasin")
                        .WithMany("ListeTestVelos")
                        .HasForeignKey("MagasinId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_testvelo_sederoule_magasin");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Velo", "TestVeloVelo")
                        .WithMany("ListeTestVelos")
                        .HasForeignKey("VeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_testvelo_essayer_velo");

                    b.Navigation("TestVeloMagasin");

                    b.Navigation("TestVeloVelo");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Utilite", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Velo", "UtiliteVelo")
                        .WithMany("ListeUtilites")
                        .HasForeignKey("VeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_utilite_note_velo");

                    b.Navigation("UtiliteVelo");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Velo", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.CaracteristiqueVelo", "VeloCaracteristiqueVelo")
                        .WithMany("ListeVelos")
                        .HasForeignKey("CaracteristiqueVeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_batterie_integrer_velo");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Categorie", "VeloCategorie")
                        .WithMany("ListeVelos")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_velo_apparteni_categori");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Marque", "VeloMarque")
                        .WithMany("ListeVelos")
                        .HasForeignKey("MarqueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_velo_fabriquer_marque");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Moteur", "VeloMoteur")
                        .WithMany("ListeVelos")
                        .HasForeignKey("MoteurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_moteur_integrer_velo");

                    b.Navigation("VeloCaracteristiqueVelo");

                    b.Navigation("VeloCategorie");

                    b.Navigation("VeloMarque");

                    b.Navigation("VeloMoteur");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.VeloModifier", b =>
                {
                    b.HasOne("WsRest_UpWay.Models.EntityFramework.CaracteristiqueVelo", "VeloModifCaracteristiqueVelo")
                        .WithMany("ListeVeloModifiers")
                        .HasForeignKey("CaracteristiqueVeloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_batterie_integrer_velomodifier");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Categorie", "VeloModifierCategorie")
                        .WithMany("ListeVeloModifiers")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_velomodifier_apparteni_categori");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Moteur", "VeloModifierMoteur")
                        .WithMany("ListeVeloModifiers")
                        .HasForeignKey("MoteurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_moteur_integrer_velomodifier");

                    b.HasOne("WsRest_UpWay.Models.EntityFramework.Marque", "VeloModifierMarque")
                        .WithMany("ListeVeloModifiers")
                        .HasForeignKey("VelomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_velomodifier_fabriquer_marque");

                    b.Navigation("VeloModifCaracteristiqueVelo");

                    b.Navigation("VeloModifierCategorie");

                    b.Navigation("VeloModifierMarque");

                    b.Navigation("VeloModifierMoteur");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Accessoire", b =>
                {
                    b.Navigation("ListeAjoutAccessoires");

                    b.Navigation("ListePhotoAccessoires");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.AdresseExpedition", b =>
                {
                    b.Navigation("ListeAdresseFact");

                    b.Navigation("ListeInformations");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.AdresseFacturation", b =>
                {
                    b.Navigation("ListeAdresseExpe");

                    b.Navigation("ListeDetailCommande");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Article", b =>
                {
                    b.Navigation("ListeContenuArticles");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Assurance", b =>
                {
                    b.Navigation("ListeLignePaniers");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.CaracteristiqueVelo", b =>
                {
                    b.Navigation("ListeVeloModifiers");

                    b.Navigation("ListeVelos");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Categorie", b =>
                {
                    b.Navigation("ListeAccessoires");

                    b.Navigation("ListeVeloModifiers");

                    b.Navigation("ListeVelos");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.CategorieArticle", b =>
                {
                    b.Navigation("ListeArticles");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.CodeReduction", b =>
                {
                    b.Navigation("ListeInformations");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.CompteClient", b =>
                {
                    b.Navigation("ListeAdresseExpe");

                    b.Navigation("ListeAdresseFact");

                    b.Navigation("ListeAlerteVelos");

                    b.Navigation("ListeDetailCommandes");

                    b.Navigation("ListePaniers");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.DetailCommande", b =>
                {
                    b.Navigation("ListePaniers");

                    b.Navigation("ListeRetraitMagasins");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.EtatCommande", b =>
                {
                    b.Navigation("ListeDetailCommandes");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Information", b =>
                {
                    b.Navigation("ListeRetraitMagasins");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.LignePanier", b =>
                {
                    b.Navigation("ListeMarquageVelos");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Magasin", b =>
                {
                    b.Navigation("ListeRetraitMagasins");

                    b.Navigation("ListeTestVelos");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Marque", b =>
                {
                    b.Navigation("ListeAccessoires");

                    b.Navigation("ListeMoteurs");

                    b.Navigation("ListeVeloModifiers");

                    b.Navigation("ListeVelos");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Moteur", b =>
                {
                    b.Navigation("ListeVeloModifiers");

                    b.Navigation("ListeVelos");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Panier", b =>
                {
                    b.Navigation("ListeAjouterAccessoires");

                    b.Navigation("ListeDetailCommandes");

                    b.Navigation("ListeInformations");

                    b.Navigation("ListeLignePaniers");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.RapportInspection", b =>
                {
                    b.Navigation("ListeEstRealises");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.ReparationVelo", b =>
                {
                    b.Navigation("ListeEstRealises");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.RetraitMagasin", b =>
                {
                    b.Navigation("ListeDetailCommandes");

                    b.Navigation("ListeInformations");
                });

            modelBuilder.Entity("WsRest_UpWay.Models.EntityFramework.Velo", b =>
                {
                    b.Navigation("ListeAlerteVelos");

                    b.Navigation("ListeEstRealises");

                    b.Navigation("ListeLignePaniers");

                    b.Navigation("ListeMentionVelos");

                    b.Navigation("ListePhotoVelos");

                    b.Navigation("ListeTestVelos");

                    b.Navigation("ListeUtilites");
                });
#pragma warning restore 612, 618
        }
    }
}
